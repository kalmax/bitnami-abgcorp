/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/theme.js":
/*!*************************!*\
  !*** ./src/js/theme.js ***!
  \*************************/
/***/ (() => {

eval("jQuery(function ($) {\n  $(document).ready(function () {\n    var windowWidth = $(window).height();\n    /* #### Scroll maging indicator params #### */\n\n    var indicatorParams = {\n      colorTrigger: \"white\",\n      colorStart: \"red\",\n      colorEnd: \"blue\",\n      indent: 5\n    };\n\n    if (window.matchMedia(\"(min-width: 1025px)\").matches) {\n      /* ############### ANIMATION - Button Links ############# */\n      $(\".btn-from-link\").mouseenter(function () {\n        var btnLinkLine = $(this).find(\".line\");\n        var tl = new TimelineMax(); //tl.fromTo(btnLinkLine, 0.1, { width: \"100%\" }, { width: \"0px\" })\n\n        tl.fromTo(btnLinkLine, 0.5, {\n          delay: 0.3,\n          width: \"0\"\n        }, {\n          delay: 0.3,\n          width: \"100%\"\n        });\n      });\n      /* ############### HOME PAGE ############### */\n\n      var controller = new ScrollMagic.Controller();\n      /* Who we are section */\n\n      var tl1 = new TimelineMax();\n      tl1.fromTo('.home #section-who-we-are .node-line .elementor-widget-container img', 0.5, {\n        scaleX: 0\n      }, {\n        scaleX: 1,\n        transformOrigin: '0% 100%'\n      }).staggerFrom('.home #section-who-we-are .node .elementor-widget-container img', 0.5, {\n        opacity: 0,\n        scale: 0.5,\n        transformOrigin: \"center center\",\n        ease: Elastic.easeOut.config(1, 0.5)\n      });\n      var scene1 = new ScrollMagic.Scene({\n        triggerElement: \".home #section-who-we-are\",\n        reverse: false\n      }).setTween(tl1).addTo(controller);\n      var tl1_2 = new TimelineMax();\n      tl1_2.fromTo('.home #section-who-we-are #cover-image .elementor-widget-container', 0.5, {\n        y: 30,\n        autoAlpha: 0,\n        ease: Power1.easeOut\n      }, {\n        y: 0,\n        autoAlpha: 1\n      });\n      var scene1_2 = new ScrollMagic.Scene({\n        triggerElement: \".home #section-who-we-are\",\n        reverse: false\n      }).setTween(tl1_2).addTo(controller);\n      /* Join our team bottom section */\n\n      var tl2 = new TimelineMax();\n      tl2.set(\".home #section-join-team-bottom .node-line .elementor-widget-container img\", {\n        height: '0'\n      }, 'start').fromTo('.home #section-join-team-bottom .node-line .elementor-widget-container img', 0.5, {\n        height: 0\n      }, {\n        height: '67px'\n      }).staggerFrom('.home #section-join-team-bottom .node .elementor-widget-container img', 0.5, {\n        opacity: 0,\n        scale: 0.5,\n        transformOrigin: \"center center\",\n        ease: Elastic.easeOut.config(1, 0.5)\n      });\n      var scene2 = new ScrollMagic.Scene({\n        triggerElement: \".home #section-join-team-bottom\",\n        reverse: false\n      }).setTween(tl2).addTo(controller); // cover image\n\n      var tl2_2 = new TimelineMax();\n      tl2_2.fromTo('.home #section-join-team #cover-image .elementor-widget-container', 0.5, {\n        y: 30,\n        autoAlpha: 0,\n        ease: Power1.easeOut\n      }, {\n        y: 0,\n        autoAlpha: 1\n      });\n      var scene2_2 = new ScrollMagic.Scene({\n        triggerElement: \".home #section-join-team\",\n        offset: -100,\n        reverse: false\n      }).setTween(tl2_2).addTo(controller);\n      /* Vision Goals Section */\n\n      var tl3 = new TimelineMax();\n      tl3.fromTo('.home #section-vision-goals #node-line-1 .elementor-widget-container img', 0.3, {\n        scaleX: 0\n      }, {\n        scaleX: 1,\n        transformOrigin: '0% 100%'\n      }).staggerFrom('.home #section-vision-goals #icon-1 .elementor-icon', 0.3, {\n        scale: 0.8,\n        transformOrigin: \"center center\",\n        ease: Elastic.easeOut.config(1, 0.5)\n      }).fromTo('.home #section-vision-goals #node-line-2 .elementor-widget-container img', 0.3, {\n        scaleX: 0\n      }, {\n        scaleX: 1,\n        transformOrigin: '0% 100%'\n      }).staggerFrom('.home #section-vision-goals #icon-2 .elementor-icon', 0.3, {\n        scale: 0.8,\n        transformOrigin: \"center center\",\n        ease: Elastic.easeOut.config(1, 0.5)\n      }).fromTo('.home #section-vision-goals #node-line-3 .elementor-widget-container img', 0.3, {\n        scaleX: 0\n      }, {\n        scaleX: 1,\n        transformOrigin: '0% 100%'\n      }).staggerFrom('.home #section-vision-goals #icon-3 .elementor-icon', 0.3, {\n        scale: 0.8,\n        transformOrigin: \"center center\",\n        ease: Elastic.easeOut.config(1, 0.5)\n      }).fromTo('.home #section-vision-goals #node-line-4 .elementor-widget-container img', 0.3, {\n        scaleX: 0\n      }, {\n        scaleX: 1,\n        transformOrigin: '0% 100%'\n      }).staggerFrom('.home #section-vision-goals .node .elementor-widget-container img', 0.3, {\n        opacity: 0,\n        scale: 0.8,\n        transformOrigin: \"center center\",\n        ease: Elastic.easeOut.config(1, 0.5)\n      });\n      var scene4 = new ScrollMagic.Scene({\n        triggerElement: \".home #section-vision-goals\",\n        offset: 40,\n        reverse: false\n      }) // .addIndicators()\n      .setTween(tl3).addTo(controller);\n    }\n\n    function animateHomeHeroCarouselByWidth() {\n      if (window.matchMedia(\"(min-width: 1024px)\").matches) {\n        animateEaseRightToLeft($(\".home #hero-carousel-brands .from-carousel .slick-active:lt(4)\"));\n      }\n    }\n    /*\r\n      Animates an image  - Fades image up with opacity reveal\r\n      @param el - the element\r\n      @param triggerElement - element to trigger when scrolling before the animation\r\n      @@param offset - scroll offset on scroll trigger\r\n    */\n\n\n    function animateEaseImageUp(params) {\n      var tl = new TimelineMax();\n      tl.fromTo(params.el, 0.5, {\n        y: 30,\n        autoAlpha: 0,\n        ease: Power1.easeOut\n      }, {\n        y: 0,\n        autoAlpha: 1\n      });\n      var scene = new ScrollMagic.Scene({\n        triggerElement: params.triggerElement,\n        offset: params.offset ? params.offset : 0,\n        reverse: false\n      }).setTween(tl).addTo(controller);\n    }\n    /*\r\n      Animates an image  - Draws a line with a node\r\n      @param el - the element\r\n      @param triggerElement - element to trigger when scrolling before the animation\r\n      @@param offset - scroll offset on scroll trigger\r\n    */\n\n\n    function animateLineNodeDown(params) {\n      var tl = new TimelineMax();\n      tl.set(\"\".concat(params.el, \" .node-line .elementor-widget-container img\"), {\n        height: '0'\n      }, 'start').fromTo(\"\".concat(params.el, \" .node-line .elementor-widget-container img\"), 0.5, {\n        height: 0\n      }, {\n        height: '67px'\n      }).staggerFrom(\"\".concat(params.el, \" .node .elementor-widget-container img\"), 0.5, {\n        opacity: 0,\n        scale: 0.5,\n        transformOrigin: \"center center\",\n        ease: Elastic.easeOut.config(1, 0.5)\n      });\n      var scene = new ScrollMagic.Scene({\n        triggerElement: params.triggerElement,\n        reverse: false\n      }).setTween(tl).addTo(controller);\n    }\n\n    animateHomeHeroCarouselByWidth();\n    /* ############# END OF HOME PAGE ############# */\n\n    /* ################ ANIMATION FUNCTIONS ######################## */\n\n    /* carousel items animation */\n\n    function animateEaseRightToLeft(element) {\n      var tl = new TimelineMax();\n      tl.staggerFrom(element, 0.3, {\n        x: \"+=30\",\n        opacity: 0,\n        autoAlpha: 0\n      }, 0.5);\n    }\n    /* ############# ABOUT PAGE ############# */\n    // about page tab\n\n\n    var indicatorInitialPosition,\n        indicatorNewPosition,\n        indicatorTemporaryPosition = 0;\n    $('.btnTab').on('click', function () {\n      // setting new indicator position if tab is clicked\n      indicatorNewPosition = indicatorTemporaryPosition; // Hide and Show of tab contents\n\n      var content = $(this).attr('target');\n      $('.tabContent').css({\n        'display': 'none'\n      });\n      $('#' + content).css({\n        'display': 'block'\n      });\n      $('#tab-indicator').css({\n        'left': indicatorNewPosition + 'px'\n      }); // setting new initial indicator position\n\n      indicatorInitialPosition = indicatorNewPosition;\n    }); // getting inital indicator position\n    // indicatorInitialPosition = $('#tab-indicator').position().left;\n    // $('.btnTab').hover(function () {\n    //   // Tab indicator behaviour\n    //   // calculating and applying indicator temporary new position\n    //   var item = $(this).attr('item')\n    //   var indicatorWidth = $('#tab-indicator').width()\n    //   var left = item * indicatorWidth\n    //   $('#tab-indicator').css({ 'left': left + 'px' })\n    //   indicatorTemporaryPosition = left\n    // }, () => {\n    //   if (!indicatorNewPosition) {\n    //     // returning indicator to its initial position\n    //     $('#tab-indicator').css({ 'left': indicatorInitialPosition + 'px' })\n    //   }\n    //   else {\n    //     // reseting indicator new and temporary position\n    //     indicatorNewPosition = 0\n    //     indicatorTemporaryPosition = 0\n    //   }\n    // })\n    // Peakaboo Slider\n\n    $('.peakaboo-slider > div > div').slick({\n      infinite: false,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      centerMode: false,\n      arrows: true,\n      draggable: false,\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          arrows: false,\n          draggable: true,\n          centerMode: false,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          adaptiveHeight: true\n        }\n      }]\n    }); // Timeline Slider\n\n    var sliderContent = $('.timeline-content-slider > div > div');\n    var sliderImage = $('.timeline-image-slider > div > div');\n    var sliderYear = $('.timeline-year-slider > div > div');\n    sliderContent.slick({\n      accessibility: false,\n      infinite: true,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      centerMode: false,\n      arrows: false,\n      draggable: false,\n      vertical: true,\n      asNavFor: '.timeline-image-slider > div > div,.timeline-year-slider > div > div',\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          vertical: false\n        }\n      }]\n    });\n    sliderImage.slick({\n      accessibility: false,\n      infinite: true,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      centerMode: false,\n      arrows: false,\n      draggable: false,\n      vertical: true,\n      asNavFor: '.timeline-content-slider > div > div,.timeline-year-slider > div > div',\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          vertical: false\n        }\n      }]\n    });\n    sliderYear.slick({\n      accessibility: false,\n      infinite: true,\n      centerMode: false,\n      focusOnSelect: true,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      arrows: false,\n      draggable: false,\n      vertical: true,\n      asNavFor: '.timeline-content-slider > div > div,.timeline-image-slider > div > div',\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          vertical: false,\n          arrows: true,\n          centerMode: true,\n          centerPadding: '10px'\n        }\n      }]\n    });\n    $('#timeline-up img').on('click', function () {\n      sliderContent.slick('slickPrev');\n    });\n    $('#timeline-down img').on('click', function () {\n      sliderContent.slick('slickNext');\n    });\n    /* ############# END OF ABOUT PAGE ############# */\n\n    /* ############# ESG PAGE ############# */\n    // section - environmental - cover image slide up\n\n    animateEaseImageUp({\n      el: \"#esg-section-environmental #cover-image .elementor-widget-container\",\n      triggerElement: \"#esg-section-environmental\",\n      offset: 0\n    }); // section - social - cover image slide up\n\n    animateEaseImageUp({\n      el: \"#esg-section-social #cover-image .elementor-widget-container\",\n      triggerElement: \"#esg-section-social\",\n      offset: -100\n    }); // section - governance - cover image slide up\n\n    animateEaseImageUp({\n      el: \"#esg-section-governance #cover-image .elementor-widget-container\",\n      triggerElement: \"#esg-section-governance\",\n      offset: -100\n    }); // section - diversity - cover image slide up\n\n    animateEaseImageUp({\n      el: \"#esg-section-diversity #cover-image .elementor-widget-container\",\n      triggerElement: \"#esg-section-diversity\",\n      offset: -100\n    }); // section - cta download\n\n    animateLineNodeDown({\n      el: \"#esg-section-cta-download-line-node\",\n      triggerElement: \"#esg-section-cta-download-top-border\",\n      offset: -100\n    });\n    /* ############# END OF ESG PAGE ############# */\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/theme.js\n");

/***/ }),

/***/ "./src/scss/theme.scss":
/*!*****************************!*\
  !*** ./src/scss/theme.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2Nzcy90aGVtZS5zY3NzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLXRoZW1lLWNoaWxkLy4vc3JjL3Njc3MvdGhlbWUuc2Nzcz9kYzY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scss/theme.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/theme": 0,
/******/ 			"css/theme": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkhello_theme_child"] = self["webpackChunkhello_theme_child"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/theme"], () => (__webpack_require__("./src/js/theme.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/theme"], () => (__webpack_require__("./src/scss/theme.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;